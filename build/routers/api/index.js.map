{"version":3,"sources":["../../../server/routers/api/index.js"],"names":["router","Router","use","req","res","next","token","body","query","headers","verify","process","env","JWT_SECRET","err","decoded","send","status"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEA;AACAD,OAAOE,GAAP,CAAW,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7B;AACA,MAAMC,QACJH,IAAII,IAAJ,CAASD,KAAT,IAAkBH,IAAIK,KAAJ,CAAUF,KAA5B,IAAqCH,IAAIM,OAAJ,CAAY,gBAAZ,CADvC;;AAGA;AACA,MAAIH,KAAJ,EAAW;AACT;AACA,2BAAII,MAAJ,CAAWJ,KAAX,EAAkBK,QAAQC,GAAR,CAAYC,UAA9B,EAA0C,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC1D,UAAID,GAAJ,EAAS;AACPV,YAAIY,IAAJ,CAAS,yBAAe,EAAf,uBAAT;AACD,OAFD,MAEO;AACL;AACAb,YAAIY,OAAJ,GAAcA,OAAd;AACAV;AACD;AACF,KARD;AASD,GAXD,MAWO;AACL;AACA;AACA,WAAOD,IAAIa,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,yBAAe,EAAf,8BAArB,CAAP;AACD;AACF,CAtBD;;AAwBAhB,OAAOE,GAAP,CAAW,QAAX;AACAF,OAAOE,GAAP,CAAW,QAAX;AACAF,OAAOE,GAAP,CAAW,UAAX;AACAF,OAAOE,GAAP,CAAW,WAAX;;kBAEeF,M","file":"index.js","sourcesContent":["import teamRouter from './Team';\nimport meetRouter from './Meet';\nimport regionRouter from './Region';\nimport rankingsRouter from './Rankings';\nimport express from 'express';\nimport jwt from 'jsonwebtoken';\nimport { jwtAuthError, jwtNotProvidedError } from '../../helpers/errors';\nimport { formatResponse } from '../../helpers/api';\n\nconst router = express.Router();\n\n// route middleware to verify a token\nrouter.use((req, res, next) => {\n  // check header or url parameters or post parameters for token\n  const token =\n    req.body.token || req.query.token || req.headers['x-access-token'];\n\n  // decode token\n  if (token) {\n    // verifies secret and checks exp\n    jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\n      if (err) {\n        res.send(formatResponse({}, jwtAuthError));\n      } else {\n        // if everything is good, save to request for use in other routes\n        req.decoded = decoded;\n        next();\n      }\n    });\n  } else {\n    // if there is no token\n    // return an error\n    return res.status(403).send(formatResponse({}, jwtNotProvidedError));\n  }\n});\n\nrouter.use('/teams', teamRouter);\nrouter.use('/meets', meetRouter);\nrouter.use('/regions', regionRouter);\nrouter.use('/rankings', rankingsRouter);\n\nexport default router;\n"]}