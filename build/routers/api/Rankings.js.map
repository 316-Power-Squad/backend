{"version":3,"sources":["../../../server/routers/api/Rankings.js"],"names":["router","Router","cache","middleware","qualifyTeams","resolve","reject","getRegionals","gender","regionals","getMeets","meets","result","get","req","res","clear","json"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;AACA,IAAIC,QAAQ,mBAASC,UAArB;;AAEA,IAAMC,eAAe,SAAfA,YAAe,SAAU;AAC7B,SAAO;AAAA,0EAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAES,kBAAQC,YAAR,CAAqBC,MAArB,CAFT;;AAAA;AAETC,uBAFS;AAAA;AAAA,qBAGK,kBAAQC,QAAR,CAAiBF,MAAjB,CAHL;;AAAA;AAGTG,mBAHS;AAAA;AAAA,qBAIM,8BAAUF,SAAV,EAAqBE,KAArB,CAJN;;AAAA;AAITC,oBAJS;;AAKfP,sBAAQO,MAAR;AALe;AAAA;;AAAA;AAAA;AAAA;;AAOfN;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAUD,CAXD;;AAaAN,OAAOa,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjC,qBAASC,KAAT;AACAD,MAAIE,IAAJ,CAAS,yBAAe,EAAED,OAAO,IAAT,EAAf,CAAT;AACD,CAHD;;AAKA;AACA;AACAhB,OAAOa,GAAP,CAAW,OAAX,EAAoBX,MAAM,QAAN,CAApB;AAAA,yEAAqC,kBAAOY,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEZX,aAAa,MAAb,CAFY;;AAAA;AAE3BQ,kBAF2B;;AAGjCG,gBAAIE,IAAJ,CAAS,yBAAeL,MAAf,CAAT;AAHiC;AAAA;;AAAA;AAAA;AAAA;;AAKjCG,gBAAIE,IAAJ,CAAS,yBAAe,EAAf,eAAT;;AALiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AASAjB,OAAOa,GAAP,CAAW,SAAX,EAAsBX,MAAM,QAAN,CAAtB;AAAA,yEAAuC,kBAAOY,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEdX,aAAa,QAAb,CAFc;;AAAA;AAE7BQ,kBAF6B;;AAGnCG,gBAAIE,IAAJ,CAAS,yBAAeL,MAAf,CAAT;AAHmC;AAAA;;AAAA;AAAA;AAAA;;AAKnCG,gBAAIE,IAAJ,CAAS,yBAAe,EAAf,eAAT;;AALmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;;kBASejB,M","file":"Rankings.js","sourcesContent":["import express from 'express';\nimport apicache from 'apicache';\nimport Ranking from '../../models/Ranking';\nimport { formatResponse } from '../../helpers/api';\nimport algorithm from '../../kolasAlgorithm';\n\nconst router = express.Router();\nlet cache = apicache.middleware;\n\nconst qualifyTeams = gender => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const regionals = await Ranking.getRegionals(gender);\n      const meets = await Ranking.getMeets(gender);\n      const result = await algorithm(regionals, meets);\n      resolve(result);\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\nrouter.get('/clear', (req, res) => {\n  apicache.clear();\n  res.json(formatResponse({ clear: true }));\n});\n\n// Need to have separate routes as we need to cache the two\n// calls separately\nrouter.get('/mens', cache('1 week'), async (req, res) => {\n  try {\n    const result = await qualifyTeams('mens');\n    res.json(formatResponse(result));\n  } catch (err) {\n    res.json(formatResponse({}, err));\n  }\n});\n\nrouter.get('/womens', cache('1 week'), async (req, res) => {\n  try {\n    const result = await qualifyTeams('womens');\n    res.json(formatResponse(result));\n  } catch (err) {\n    res.json(formatResponse({}, err));\n  }\n});\n\nexport default router;\n"]}